/*
* Copyright (c) 2016-2017, Henka Contributors
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with
* the License. You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and limitations under the License.
*/

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
    }
}
plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'com.roku'
archivesBaseName = 'henka'
version = '1.0.0-RELEASE'

repositories {
    jcenter()
}

dependencies {
    compile gradleApi()
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.5'
    compile localGroovy()

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.+'
    testCompile "org.mockito:mockito-core:2.+"
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "mprotsenko"
            name "Mykyta Protsenko"
            email "mykyta@protsenko.com"
        }
    }
}

// Create the publication with the pom configuration:
publishing {
    publications {
        HenkaPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact groovydocJar
            groupId 'com.roku'
            artifactId 'henka'
            version "${project.version}"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Opionated Gradle Plugin for Terraform and AWS')
                root.appendNode('name', 'Henka')
                root.appendNode('url', 'https://github.com/roku-oss/henka.git')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['HenkaPublication']
    pkg {
        repo = 'roku-oss'
        name = 'henka'
        userOrg = 'roku-oss'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/roku-oss/henka.git'
        desc = 'Opionated Gradle Plugin for Terraform and AWS'

        version{
            name = "${project.version}"
            gpg {
                sign = true
            }
        }
    }
}


artifactory {
    contextUrl = 'https://oss.jfrog.org'
    resolve {
        repository {
            repoKey = 'libs-release'
        }
    }
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
            password = project.hasProperty('bintrayKey') ? project.bintrayKey : System.getenv('BINTRAY_KEY')
        }
        defaults {
            publications 'HenkaPublication'
        }
    }
}

groovydoc {
}

task groovydocJar(type: Jar) {
    classifier = 'javadoc'
    from groovydoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives groovydocJar, sourcesJar
}
